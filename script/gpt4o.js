const axios = require('axios');
const { josh } = require('../api'); 

const gothicFont = {
  A: "ùñ†", B: "ùñ°", C: "ùñ¢", D: "ùñ£", E: "ùñ§", F: "ùñ•", G: "ùñ¶", H: "ùñß", I: "ùñ®", J: "ùñ©", K: "ùñ™", L: "ùñ´", M: "ùñ¨", N: "ùñ≠", O: "ùñÆ", P: "ùñØ", Q: "ùñ∞", R: "ùñ±",
  S: "ùñ≤", T: "ùñ≥", U: "ùñ¥", V: "ùñµ", W: "ùñ∂", X: "ùñ∑", Y: "ùñ∏", Z: "ùñπ", 
  a: "ùñ∫", b: "ùñª", c: "ùñº", d: "ùñΩ", e: "ùñæ", f: "ùñø", g: "ùóÄ", h: "ùóÅ", i: "ùóÇ",
  j: "ùóÉ", k: "ùóÑ", l: "ùóÖ", m: "ùóÜ", n: "ùóá", o: "ùóà", p: "ùóâ", q: "ùóä", r: "ùóã",
  s: "ùóå", t: "ùóç", u: "ùóé", v: "ùóè", w: "ùóê", x: "ùóë", y: "ùóí", z: "ùóì",
  0: "ùü¢", 1: "ùü£", 2: "ùü§", 3: "ùü•", 4: "ùü¶", 5: "ùüß", 6: "ùü®", 7: "ùü©", 8: "ùü™", 9: "ùü´"
};

const convertToGothic = (hot) => {
  return hot.split('').map(ppgi => gothicFont[ppgi] || ppgi).join('');
};

module.exports.config = {
    name: 'gpt4o',
    version: '1.1.0',
    role: 0,
    hasPrefix: false,
    aliases: ['gpt4o'],
    description: 'Get a response from GPT-4o',
    usage: 'gpt4o [your message]',
    credits: 'churchill',
    cooldown: 3,
};

module.exports.run = async function({ api, event, args }) {
    const chilli = args.join(' ');

    if (!chilli) {
        return api.sendMessage('Please provide a query, for example: gpt4o writemeessayaboutAI', event.threadID, event.messageID);
    }

    const pogi = await new Promise((resolve, reject) => {
        api.sendMessage('üü° Searching for your answer...', event.threadID, (err, hot) => {
            if (err) return reject(err);
            resolve(hot);
        }, event.messageID);
    });

    const apiUrl = `${josh}/api/gpt-4o?q=${encodeURIComponent(chilli)}&uid=1`;

    try {
        const hot = await axios.get(apiUrl);
        const gpt4oResponse = hot.data.result || 'No response from GPT-4o.';

        const gothicResponse = convertToGothic(gpt4oResponse);

        await api.editMessage(gothicResponse, pogi.messageID);

    } catch (chilli) {
        console.error('Error:', chilli);

        await api.editMessage('‚ùå An error occurred while fetching the response. Please try again later.', pogi.messageID);
    }
};
